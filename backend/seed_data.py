#!/usr/bin/env python3
"""
Script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
Usage: python seed_data.py
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database import engine
from app.models import Service, Staff, StaffService, StaffSchedule, BusinessHours
from sqlmodel import Session, select
from datetime import time, datetime, UTC

def seed_business_hours():
    """‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏£‡πâ‡∏≤‡∏ô"""
    with Session(engine) as session:
        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
        business_hours = []
        for weekday in range(0, 7):  # 0=Monday, 6=Sunday
            if weekday < 6:  # Mon-Sat ‡πÄ‡∏õ‡∏¥‡∏î
                business_hours.append(BusinessHours(
                    weekday=weekday,
                    open_time=time(9, 0),  # 09:00
                    close_time=time(17, 0),  # 17:00
                    slot_minutes=30
                ))
            else:  # Sunday ‡∏õ‡∏¥‡∏î
                business_hours.append(BusinessHours(
                    weekday=weekday,
                    open_time=time(0, 0),  # 00:00
                    close_time=time(0, 0),  # 00:00
                    slot_minutes=30
                ))
        
        session.add_all(business_hours)
        session.commit()
        print("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏£‡πâ‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        print(f"  - ‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå-‡πÄ‡∏™‡∏≤‡∏£‡πå: 09:00-17:00")
        print(f"  - ‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå: ‡∏õ‡∏¥‡∏î")

def seed_services():
    """‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£"""
    with Session(engine) as session:
        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
        services = [
            Service(name="‡∏ï‡∏±‡∏î‡∏ú‡∏°", description="‡∏ï‡∏±‡∏î‡∏ú‡∏°‡∏ä‡∏≤‡∏¢", duration_minutes=30, price=100),
            Service(name="‡∏™‡∏£‡∏∞‡πÑ‡∏î‡∏£‡πå", description="‡∏™‡∏£‡∏∞‡πÑ‡∏î‡∏£‡πå", duration_minutes=60, price=200),
            Service(name="‡∏ó‡∏≥‡πÄ‡∏•‡πá‡∏ö", description="‡∏ó‡∏≥‡πÄ‡∏•‡πá‡∏ö", duration_minutes=45, price=150),
        ]
        
        session.add_all(services)
        session.commit()
        print("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°
        for service in services:
            print(f"  - {service.name}: {service.duration_minutes} ‡∏ô‡∏≤‡∏ó‡∏µ, ‡∏ø{service.price}")
        
        return services

def seed_staff():
    """‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô"""
    with Session(engine) as session:
        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
        staff = [
            Staff(name="‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô 1", phone="081-234-5678"),
            Staff(name="‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô 2", phone="082-345-6789"),
        ]
        
        session.add_all(staff)
        session.commit()
        print("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°
        for person in staff:
            print(f"  - {person.name}: {person.phone}")
        
        return staff

def seed_staff_services(services, staff):
    """‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô-‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£"""
    with Session(engine) as session:
        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
        current_time = datetime.now(UTC)
        staff_services = [
            StaffService(staff_id=staff[0].id, service_id=services[0].id, created_at=current_time),
            StaffService(staff_id=staff[0].id, service_id=services[1].id, created_at=current_time),
            StaffService(staff_id=staff[0].id, service_id=services[2].id, created_at=current_time),
            StaffService(staff_id=staff[1].id, service_id=services[0].id, created_at=current_time),
            StaffService(staff_id=staff[1].id, service_id=services[1].id, created_at=current_time),
        ]
        
        session.add_all(staff_services)
        session.commit()
        print("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô-‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°
        for ss in staff_services:
            print(f"  - ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô {ss.staff_id} ‡∏ó‡∏≥‡πÑ‡∏î‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ {ss.service_id}")

def seed_staff_schedules(staff):
    """‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏Ç‡∏≠‡∏á‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô"""
    with Session(engine) as session:
        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
        current_time = datetime.now(UTC)
        schedules = []
        for person in staff:  # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô
            for weekday in range(0, 6):  # Mon-Sat (0=Monday, 5=Saturday)
                schedules.append(StaffSchedule(
                    staff_id=person.id,
                    weekday=weekday,
                    open_time=time(9, 0),  # 09:00
                    close_time=time(17, 0),  # 17:00
                    is_working=True,
                    created_at=current_time
                ))
        
        session.add_all(schedules)
        session.commit()
        print("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏Ç‡∏≠‡∏á‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°
        print(f"  - ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á {len(staff)} ‡∏Ñ‡∏ô ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå-‡πÄ‡∏™‡∏≤‡∏£‡πå 09:00-17:00")

def main():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å"""
    print("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...")
    print("=" * 50)
    
    try:
        # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡πà‡∏≠‡∏ô (‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö foreign key)
        print("üóëÔ∏è  ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°...")
        with Session(engine) as session:
            # ‡∏•‡∏ö‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö foreign key (child tables ‡∏Å‡πà‡∏≠‡∏ô)
            session.exec(StaffService.__table__.delete())
            session.exec(StaffSchedule.__table__.delete())
            session.exec(Service.__table__.delete())
            session.exec(Staff.__table__.delete())
            session.exec(BusinessHours.__table__.delete())
            session.commit()
        print("‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        print()
        
        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πá‡∏ö object ‡∏ó‡∏µ‡πà return ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤
        seed_business_hours()
        print()
        services = seed_services()
        print()
        staff = seed_staff()
        print()
        seed_staff_services(services, staff)
        print()
        seed_staff_schedules(staff)
        print()
        print("üéâ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        import traceback
        traceback.print_exc()
        return 1
    
    return 0

if __name__ == "__main__":
    exit(main())
